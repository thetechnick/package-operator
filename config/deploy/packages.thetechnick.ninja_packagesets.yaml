
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.6.0-beta.0.0.20210504224115-9cd8c2840e84
  creationTimestamp: null
  name: packagesets.packages.thetechnick.ninja
spec:
  group: packages.thetechnick.ninja
  names:
    kind: PackageSet
    listKind: PackageSetList
    plural: packagesets
    singular: packageset
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Status
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: PackageSet is the Schema for the PackageSets API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: PackageSetSpec defines the desired state of a PackageSet.
            properties:
              paused:
                description: Paused disables reconcilation of the PackageSet, only
                  Status updates will be propagated.
                type: boolean
              pausedFor:
                items:
                  properties:
                    group:
                      type: string
                    kind:
                      type: string
                    name:
                      type: string
                    namespace:
                      type: string
                  required:
                  - group
                  - kind
                  - name
                  - namespace
                  type: object
                type: array
              phases:
                items:
                  description: Package reconcile phase. Packages are reconciled
                  properties:
                    name:
                      description: Name of the reconcile phase.
                      type: string
                    objects:
                      description: Objects belonging to this phase.
                      items:
                        description: An object that is part of a package.
                        properties:
                          object:
                            type: object
                            x-kubernetes-embedded-resource: true
                            x-kubernetes-preserve-unknown-fields: true
                        required:
                        - object
                        type: object
                      type: array
                  required:
                  - name
                  - objects
                  type: object
                type: array
              readinessProbes:
                items:
                  description: Package probes define how packages are checked for
                    their status.
                  properties:
                    kind:
                      description: Kind specific configuration parameters. Only present
                        if Type = Kind.
                      properties:
                        apiGroup:
                          description: Object APIGroup to apply a probe to.
                          type: string
                        kind:
                          description: Object Kind to apply a probe to.
                          type: string
                      required:
                      - apiGroup
                      - kind
                      type: object
                    name:
                      description: Name of the probe.
                      type: string
                    probe:
                      description: Probe parameters.
                      properties:
                        condition:
                          description: Condition specific configuration parameters.
                            Only present if Type = Condition.
                          properties:
                            status:
                              default: "True"
                              description: Condition status to probe for.
                              type: string
                            type:
                              description: Condition Type to probe for.
                              type: string
                          required:
                          - status
                          - type
                          type: object
                        type:
                          description: Type of the probe.
                          enum:
                          - Condition
                          type: string
                      required:
                      - condition
                      - type
                      type: object
                    type:
                      description: Type of the package probe.
                      enum:
                      - Kind
                      type: string
                  required:
                  - kind
                  - name
                  - probe
                  - type
                  type: object
                type: array
            required:
            - phases
            - readinessProbes
            type: object
          status:
            default:
              phase: Pending
            description: PackageSetStatus defines the observed state of a PackageSet
            properties:
              conditions:
                description: Conditions is a list of status conditions ths object
                  is in.
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    type FooStatus struct{     // Represents the observations of a
                    foo's current state.     // Known .status.conditions.type are:
                    \"Available\", \"Progressing\", and \"Degraded\"     // +patchMergeKey=type
                    \    // +patchStrategy=merge     // +listType=map     // +listMapKey=type
                    \    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                    \n     // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: The most recent generation observed by the controller.
                format: int64
                type: integer
              pausedFor:
                items:
                  properties:
                    group:
                      type: string
                    kind:
                      type: string
                    name:
                      type: string
                    namespace:
                      type: string
                  required:
                  - group
                  - kind
                  - name
                  - namespace
                  type: object
                type: array
              phase:
                description: 'DEPRECATED: This field is not part of any API contract
                  it will go away as soon as kubectl can print conditions! Human readable
                  status - please use .Conditions from code'
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
